/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.records;


import com.scratch.database.mysql.jv.tables.ProductAvailability;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductAvailabilityRecord extends UpdatableRecordImpl<ProductAvailabilityRecord> implements Record6<ULong, String, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1659016870;

    /**
     * Setter for <code>jv_b2c_dev.product_availability.id</code>.
     */
    public ProductAvailabilityRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>jv_b2c_dev.product_availability.item_number</code>.
     */
    public ProductAvailabilityRecord setItemNumber(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.item_number</code>.
     */
    public String getItemNumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jv_b2c_dev.product_availability.s2k_available</code>.
     */
    public ProductAvailabilityRecord setS2kAvailable(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.s2k_available</code>.
     */
    public Integer getS2kAvailable() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>jv_b2c_dev.product_availability.available_quantity</code>.
     */
    public ProductAvailabilityRecord setAvailableQuantity(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.available_quantity</code>.
     */
    public Integer getAvailableQuantity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>jv_b2c_dev.product_availability.pending_sold_quantity</code>.
     */
    public ProductAvailabilityRecord setPendingSoldQuantity(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.pending_sold_quantity</code>.
     */
    public Integer getPendingSoldQuantity() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>jv_b2c_dev.product_availability.confirmed_sold_quantity</code>.
     */
    public ProductAvailabilityRecord setConfirmedSoldQuantity(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.product_availability.confirmed_sold_quantity</code>.
     */
    public Integer getConfirmedSoldQuantity() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, String, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return ProductAvailability.PRODUCT_AVAILABILITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ProductAvailability.PRODUCT_AVAILABILITY.ITEM_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ProductAvailability.PRODUCT_AVAILABILITY.S2K_AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ProductAvailability.PRODUCT_AVAILABILITY.AVAILABLE_QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return ProductAvailability.PRODUCT_AVAILABILITY.PENDING_SOLD_QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ProductAvailability.PRODUCT_AVAILABILITY.CONFIRMED_SOLD_QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getItemNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getS2kAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getAvailableQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getPendingSoldQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getConfirmedSoldQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getItemNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getS2kAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAvailableQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPendingSoldQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getConfirmedSoldQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value2(String value) {
        setItemNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value3(Integer value) {
        setS2kAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value4(Integer value) {
        setAvailableQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value5(Integer value) {
        setPendingSoldQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord value6(Integer value) {
        setConfirmedSoldQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductAvailabilityRecord values(ULong value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductAvailabilityRecord
     */
    public ProductAvailabilityRecord() {
        super(ProductAvailability.PRODUCT_AVAILABILITY);
    }

    /**
     * Create a detached, initialised ProductAvailabilityRecord
     */
    public ProductAvailabilityRecord(ULong id, String itemNumber, Integer s2kAvailable, Integer availableQuantity, Integer pendingSoldQuantity, Integer confirmedSoldQuantity) {
        super(ProductAvailability.PRODUCT_AVAILABILITY);

        set(0, id);
        set(1, itemNumber);
        set(2, s2kAvailable);
        set(3, availableQuantity);
        set(4, pendingSoldQuantity);
        set(5, confirmedSoldQuantity);
    }
}
