/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables;


import com.scratch.database.mysql.jv.Indexes;
import com.scratch.database.mysql.jv.JvB2cDev;
import com.scratch.database.mysql.jv.Keys;
import com.scratch.database.mysql.jv.enums.PromotionDetailDetailType;
import com.scratch.database.mysql.jv.enums.PromotionDetailDiscountType;
import com.scratch.database.mysql.jv.tables.records.PromotionDetailRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromotionDetail extends TableImpl<PromotionDetailRecord> {

    private static final long serialVersionUID = -1226547579;

    /**
     * The reference instance of <code>jv_b2c_dev.promotion_detail</code>
     */
    public static final PromotionDetail PROMOTION_DETAIL = new PromotionDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromotionDetailRecord> getRecordType() {
        return PromotionDetailRecord.class;
    }

    /**
     * The column <code>jv_b2c_dev.promotion_detail.id</code>.
     */
    public final TableField<PromotionDetailRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.promotion_id</code>.
     */
    public final TableField<PromotionDetailRecord, ULong> PROMOTION_ID = createField("promotion_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.detail_type</code>.
     */
    public final TableField<PromotionDetailRecord, PromotionDetailDetailType> DETAIL_TYPE = createField("detail_type", org.jooq.impl.SQLDataType.VARCHAR(8).asEnumDataType(com.scratch.database.mysql.jv.enums.PromotionDetailDetailType.class), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.key</code>.
     */
    public final TableField<PromotionDetailRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.discount_type</code>.
     */
    public final TableField<PromotionDetailRecord, PromotionDetailDiscountType> DISCOUNT_TYPE = createField("discount_type", org.jooq.impl.SQLDataType.VARCHAR(11).asEnumDataType(com.scratch.database.mysql.jv.enums.PromotionDetailDiscountType.class), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.discount_amount</code>.
     */
    public final TableField<PromotionDetailRecord, BigDecimal> DISCOUNT_AMOUNT = createField("discount_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_detail.is_deleted</code>.
     */
    public final TableField<PromotionDetailRecord, Byte> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>jv_b2c_dev.promotion_detail</code> table reference
     */
    public PromotionDetail() {
        this(DSL.name("promotion_detail"), null);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.promotion_detail</code> table reference
     */
    public PromotionDetail(String alias) {
        this(DSL.name(alias), PROMOTION_DETAIL);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.promotion_detail</code> table reference
     */
    public PromotionDetail(Name alias) {
        this(alias, PROMOTION_DETAIL);
    }

    private PromotionDetail(Name alias, Table<PromotionDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private PromotionDetail(Name alias, Table<PromotionDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PromotionDetail(Table<O> child, ForeignKey<O, PromotionDetailRecord> key) {
        super(child, key, PROMOTION_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JvB2cDev.JV_B2C_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROMOTION_DETAIL_PRIMARY, Indexes.PROMOTION_DETAIL_PROMOTION_DETAIL_ID_UINDEX, Indexes.PROMOTION_DETAIL_PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PromotionDetailRecord, ULong> getIdentity() {
        return Keys.IDENTITY_PROMOTION_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PromotionDetailRecord> getPrimaryKey() {
        return Keys.KEY_PROMOTION_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PromotionDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<PromotionDetailRecord>>asList(Keys.KEY_PROMOTION_DETAIL_PRIMARY, Keys.KEY_PROMOTION_DETAIL_PROMOTION_DETAIL_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PromotionDetailRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PromotionDetailRecord, ?>>asList(Keys.PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK);
    }

    public PromotionHeader promotionHeader() {
        return new PromotionHeader(this, Keys.PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromotionDetail as(String alias) {
        return new PromotionDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromotionDetail as(Name alias) {
        return new PromotionDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionDetail rename(String name) {
        return new PromotionDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionDetail rename(Name name) {
        return new PromotionDetail(name, null);
    }
}
