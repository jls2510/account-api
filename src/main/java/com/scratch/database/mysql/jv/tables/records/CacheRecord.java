/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.records;


import com.scratch.database.mysql.jv.tables.Cache;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CacheRecord extends UpdatableRecordImpl<CacheRecord> implements Record5<Integer, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 80697034;

    /**
     * Setter for <code>jv_b2c_dev.cache.id</code>.
     */
    public CacheRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.cache.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jv_b2c_dev.cache.hash_key</code>.
     */
    public CacheRecord setHashKey(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.cache.hash_key</code>.
     */
    public String getHashKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jv_b2c_dev.cache.json_value</code>.
     */
    public CacheRecord setJsonValue(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.cache.json_value</code>.
     */
    public String getJsonValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jv_b2c_dev.cache.created_ts</code>.
     */
    public CacheRecord setCreatedTs(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.cache.created_ts</code>.
     */
    public Timestamp getCreatedTs() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>jv_b2c_dev.cache.updated_ts</code>.
     */
    public CacheRecord setUpdatedTs(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jv_b2c_dev.cache.updated_ts</code>.
     */
    public Timestamp getUpdatedTs() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Cache.CACHE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Cache.CACHE.HASH_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Cache.CACHE.JSON_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Cache.CACHE.CREATED_TS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Cache.CACHE.UPDATED_TS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getHashKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getJsonValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getUpdatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHashKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getJsonValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getUpdatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord value2(String value) {
        setHashKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord value3(String value) {
        setJsonValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord value4(Timestamp value) {
        setCreatedTs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord value5(Timestamp value) {
        setUpdatedTs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CacheRecord values(Integer value1, String value2, String value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CacheRecord
     */
    public CacheRecord() {
        super(Cache.CACHE);
    }

    /**
     * Create a detached, initialised CacheRecord
     */
    public CacheRecord(Integer id, String hashKey, String jsonValue, Timestamp createdTs, Timestamp updatedTs) {
        super(Cache.CACHE);

        set(0, id);
        set(1, hashKey);
        set(2, jsonValue);
        set(3, createdTs);
        set(4, updatedTs);
    }
}
