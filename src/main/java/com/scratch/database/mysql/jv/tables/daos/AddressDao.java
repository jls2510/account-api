/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.daos;


import com.scratch.database.mysql.jv.tables.Address;
import com.scratch.database.mysql.jv.tables.records.AddressRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressDao extends DAOImpl<AddressRecord, com.scratch.database.mysql.jv.tables.pojos.Address, ULong> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(Address.ADDRESS, com.scratch.database.mysql.jv.tables.pojos.Address.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    public AddressDao(Configuration configuration) {
        super(Address.ADDRESS, com.scratch.database.mysql.jv.tables.pojos.Address.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(com.scratch.database.mysql.jv.tables.pojos.Address object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchById(ULong... values) {
        return fetch(Address.ADDRESS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Address fetchOneById(ULong value) {
        return fetchOne(Address.ADDRESS.ID, value);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByAccountId(ULong... values) {
        return fetch(Address.ADDRESS.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByName(String... values) {
        return fetch(Address.ADDRESS.NAME, values);
    }

    /**
     * Fetch records that have <code>care_of IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByCareOf(String... values) {
        return fetch(Address.ADDRESS.CARE_OF, values);
    }

    /**
     * Fetch records that have <code>line1 IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByLine1(String... values) {
        return fetch(Address.ADDRESS.LINE1, values);
    }

    /**
     * Fetch records that have <code>line2 IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByLine2(String... values) {
        return fetch(Address.ADDRESS.LINE2, values);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByCity(String... values) {
        return fetch(Address.ADDRESS.CITY, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByState(String... values) {
        return fetch(Address.ADDRESS.STATE, values);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByPostalCode(String... values) {
        return fetch(Address.ADDRESS.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByCountry(String... values) {
        return fetch(Address.ADDRESS.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByPhone(String... values) {
        return fetch(Address.ADDRESS.PHONE, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByEmail(String... values) {
        return fetch(Address.ADDRESS.EMAIL, values);
    }

    /**
     * Fetch records that have <code>default IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByDefault(Byte... values) {
        return fetch(Address.ADDRESS.DEFAULT, values);
    }

    /**
     * Fetch records that have <code>updated_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByUpdatedTs(Timestamp... values) {
        return fetch(Address.ADDRESS.UPDATED_TS, values);
    }

    /**
     * Fetch records that have <code>created_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Address> fetchByCreatedTs(Timestamp... values) {
        return fetch(Address.ADDRESS.CREATED_TS, values);
    }
}
