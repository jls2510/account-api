/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderItem implements Serializable {

    private static final long serialVersionUID = 1956443670;

    private final ULong      id;
    private final ULong      orderId;
    private final String     itemNumber;
    private final String     itemDescription;
    private final BigDecimal price;
    private final BigDecimal quantity;
    private final Byte       perishable;
    private final Integer    discountPercent;
    private final BigDecimal discountPrice;
    private final String     promoCode;
    private final BigDecimal weight;
    private final String     weightUom;
    private final Byte       isTaxable;
    private final BigDecimal tax;
    private final String     salesTaxCode;
    private final ULong      promotionId;
    private final BigDecimal qtyShip;
    private final String     catchWeight;
    private final BigDecimal catchWeightPrice;
    private final BigDecimal refundAmount;
    private final BigDecimal refundQty;
    private final Timestamp  refundEmailTs;
    private final Timestamp  createdTs;
    private final Timestamp  updatedTs;

    public OrderItem(OrderItem value) {
        this.id = value.id;
        this.orderId = value.orderId;
        this.itemNumber = value.itemNumber;
        this.itemDescription = value.itemDescription;
        this.price = value.price;
        this.quantity = value.quantity;
        this.perishable = value.perishable;
        this.discountPercent = value.discountPercent;
        this.discountPrice = value.discountPrice;
        this.promoCode = value.promoCode;
        this.weight = value.weight;
        this.weightUom = value.weightUom;
        this.isTaxable = value.isTaxable;
        this.tax = value.tax;
        this.salesTaxCode = value.salesTaxCode;
        this.promotionId = value.promotionId;
        this.qtyShip = value.qtyShip;
        this.catchWeight = value.catchWeight;
        this.catchWeightPrice = value.catchWeightPrice;
        this.refundAmount = value.refundAmount;
        this.refundQty = value.refundQty;
        this.refundEmailTs = value.refundEmailTs;
        this.createdTs = value.createdTs;
        this.updatedTs = value.updatedTs;
    }

    public OrderItem(
        ULong      id,
        ULong      orderId,
        String     itemNumber,
        String     itemDescription,
        BigDecimal price,
        BigDecimal quantity,
        Byte       perishable,
        Integer    discountPercent,
        BigDecimal discountPrice,
        String     promoCode,
        BigDecimal weight,
        String     weightUom,
        Byte       isTaxable,
        BigDecimal tax,
        String     salesTaxCode,
        ULong      promotionId,
        BigDecimal qtyShip,
        String     catchWeight,
        BigDecimal catchWeightPrice,
        BigDecimal refundAmount,
        BigDecimal refundQty,
        Timestamp  refundEmailTs,
        Timestamp  createdTs,
        Timestamp  updatedTs
    ) {
        this.id = id;
        this.orderId = orderId;
        this.itemNumber = itemNumber;
        this.itemDescription = itemDescription;
        this.price = price;
        this.quantity = quantity;
        this.perishable = perishable;
        this.discountPercent = discountPercent;
        this.discountPrice = discountPrice;
        this.promoCode = promoCode;
        this.weight = weight;
        this.weightUom = weightUom;
        this.isTaxable = isTaxable;
        this.tax = tax;
        this.salesTaxCode = salesTaxCode;
        this.promotionId = promotionId;
        this.qtyShip = qtyShip;
        this.catchWeight = catchWeight;
        this.catchWeightPrice = catchWeightPrice;
        this.refundAmount = refundAmount;
        this.refundQty = refundQty;
        this.refundEmailTs = refundEmailTs;
        this.createdTs = createdTs;
        this.updatedTs = updatedTs;
    }

    public ULong getId() {
        return this.id;
    }

    public ULong getOrderId() {
        return this.orderId;
    }

    public String getItemNumber() {
        return this.itemNumber;
    }

    public String getItemDescription() {
        return this.itemDescription;
    }

    public BigDecimal getPrice() {
        return this.price;
    }

    public BigDecimal getQuantity() {
        return this.quantity;
    }

    public Byte getPerishable() {
        return this.perishable;
    }

    public Integer getDiscountPercent() {
        return this.discountPercent;
    }

    public BigDecimal getDiscountPrice() {
        return this.discountPrice;
    }

    public String getPromoCode() {
        return this.promoCode;
    }

    public BigDecimal getWeight() {
        return this.weight;
    }

    public String getWeightUom() {
        return this.weightUom;
    }

    public Byte getIsTaxable() {
        return this.isTaxable;
    }

    public BigDecimal getTax() {
        return this.tax;
    }

    public String getSalesTaxCode() {
        return this.salesTaxCode;
    }

    public ULong getPromotionId() {
        return this.promotionId;
    }

    public BigDecimal getQtyShip() {
        return this.qtyShip;
    }

    public String getCatchWeight() {
        return this.catchWeight;
    }

    public BigDecimal getCatchWeightPrice() {
        return this.catchWeightPrice;
    }

    public BigDecimal getRefundAmount() {
        return this.refundAmount;
    }

    public BigDecimal getRefundQty() {
        return this.refundQty;
    }

    public Timestamp getRefundEmailTs() {
        return this.refundEmailTs;
    }

    public Timestamp getCreatedTs() {
        return this.createdTs;
    }

    public Timestamp getUpdatedTs() {
        return this.updatedTs;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OrderItem (");

        sb.append(id);
        sb.append(", ").append(orderId);
        sb.append(", ").append(itemNumber);
        sb.append(", ").append(itemDescription);
        sb.append(", ").append(price);
        sb.append(", ").append(quantity);
        sb.append(", ").append(perishable);
        sb.append(", ").append(discountPercent);
        sb.append(", ").append(discountPrice);
        sb.append(", ").append(promoCode);
        sb.append(", ").append(weight);
        sb.append(", ").append(weightUom);
        sb.append(", ").append(isTaxable);
        sb.append(", ").append(tax);
        sb.append(", ").append(salesTaxCode);
        sb.append(", ").append(promotionId);
        sb.append(", ").append(qtyShip);
        sb.append(", ").append(catchWeight);
        sb.append(", ").append(catchWeightPrice);
        sb.append(", ").append(refundAmount);
        sb.append(", ").append(refundQty);
        sb.append(", ").append(refundEmailTs);
        sb.append(", ").append(createdTs);
        sb.append(", ").append(updatedTs);

        sb.append(")");
        return sb.toString();
    }
}
