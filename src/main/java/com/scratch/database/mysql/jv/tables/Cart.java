/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables;


import com.scratch.database.mysql.jv.Indexes;
import com.scratch.database.mysql.jv.JvB2cDev;
import com.scratch.database.mysql.jv.Keys;
import com.scratch.database.mysql.jv.enums.CartShippingPromotionType;
import com.scratch.database.mysql.jv.tables.records.CartRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cart extends TableImpl<CartRecord> {

    private static final long serialVersionUID = 873805598;

    /**
     * The reference instance of <code>jv_b2c_dev.cart</code>
     */
    public static final Cart CART = new Cart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CartRecord> getRecordType() {
        return CartRecord.class;
    }

    /**
     * The column <code>jv_b2c_dev.cart.id</code>.
     */
    public final TableField<CartRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.session_id</code>.
     */
    public final TableField<CartRecord, String> SESSION_ID = createField("session_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.user_id</code>.
     */
    public final TableField<CartRecord, ULong> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>jv_b2c_dev.cart.item_number</code>.
     */
    public final TableField<CartRecord, String> ITEM_NUMBER = createField("item_number", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.price</code>.
     */
    public final TableField<CartRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(9, 2), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.quantity</code>.
     */
    public final TableField<CartRecord, BigDecimal> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.DECIMAL(7, 2), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.discount_percent</code>.
     */
    public final TableField<CartRecord, UInteger> DISCOUNT_PERCENT = createField("discount_percent", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>jv_b2c_dev.cart.discount_price</code>.
     */
    public final TableField<CartRecord, BigDecimal> DISCOUNT_PRICE = createField("discount_price", org.jooq.impl.SQLDataType.DECIMAL(9, 2), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.promo_code</code>.
     */
    public final TableField<CartRecord, String> PROMO_CODE = createField("promo_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.shipping_promotion_type</code>.
     */
    public final TableField<CartRecord, CartShippingPromotionType> SHIPPING_PROMOTION_TYPE = createField("shipping_promotion_type", org.jooq.impl.SQLDataType.VARCHAR(11).asEnumDataType(com.scratch.database.mysql.jv.enums.CartShippingPromotionType.class), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.shipping_promotion_amount</code>.
     */
    public final TableField<CartRecord, BigDecimal> SHIPPING_PROMOTION_AMOUNT = createField("shipping_promotion_amount", org.jooq.impl.SQLDataType.DECIMAL(9, 2), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.shipping_promotion_method</code>.
     */
    public final TableField<CartRecord, String> SHIPPING_PROMOTION_METHOD = createField("shipping_promotion_method", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.updated_ts</code>.
     */
    public final TableField<CartRecord, Timestamp> UPDATED_TS = createField("updated_ts", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jv_b2c_dev.cart.created_ts</code>.
     */
    public final TableField<CartRecord, Timestamp> CREATED_TS = createField("created_ts", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>jv_b2c_dev.cart</code> table reference
     */
    public Cart() {
        this(DSL.name("cart"), null);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.cart</code> table reference
     */
    public Cart(String alias) {
        this(DSL.name(alias), CART);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.cart</code> table reference
     */
    public Cart(Name alias) {
        this(alias, CART);
    }

    private Cart(Name alias, Table<CartRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cart(Name alias, Table<CartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Cart(Table<O> child, ForeignKey<O, CartRecord> key) {
        super(child, key, CART);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JvB2cDev.JV_B2C_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CartRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CartRecord> getPrimaryKey() {
        return Keys.KEY_CART_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CartRecord>> getKeys() {
        return Arrays.<UniqueKey<CartRecord>>asList(Keys.KEY_CART_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(String alias) {
        return new Cart(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cart as(Name alias) {
        return new Cart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(String name) {
        return new Cart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cart rename(Name name) {
        return new Cart(name, null);
    }
}
