/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.daos;


import com.scratch.database.mysql.jv.tables.Cache;
import com.scratch.database.mysql.jv.tables.records.CacheRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CacheDao extends DAOImpl<CacheRecord, com.scratch.database.mysql.jv.tables.pojos.Cache, Integer> {

    /**
     * Create a new CacheDao without any configuration
     */
    public CacheDao() {
        super(Cache.CACHE, com.scratch.database.mysql.jv.tables.pojos.Cache.class);
    }

    /**
     * Create a new CacheDao with an attached configuration
     */
    public CacheDao(Configuration configuration) {
        super(Cache.CACHE, com.scratch.database.mysql.jv.tables.pojos.Cache.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.scratch.database.mysql.jv.tables.pojos.Cache object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Cache> fetchById(Integer... values) {
        return fetch(Cache.CACHE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Cache fetchOneById(Integer value) {
        return fetchOne(Cache.CACHE.ID, value);
    }

    /**
     * Fetch records that have <code>hash_key IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Cache> fetchByHashKey(String... values) {
        return fetch(Cache.CACHE.HASH_KEY, values);
    }

    /**
     * Fetch a unique record that has <code>hash_key = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Cache fetchOneByHashKey(String value) {
        return fetchOne(Cache.CACHE.HASH_KEY, value);
    }

    /**
     * Fetch records that have <code>json_value IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Cache> fetchByJsonValue(String... values) {
        return fetch(Cache.CACHE.JSON_VALUE, values);
    }

    /**
     * Fetch records that have <code>created_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Cache> fetchByCreatedTs(Timestamp... values) {
        return fetch(Cache.CACHE.CREATED_TS, values);
    }

    /**
     * Fetch records that have <code>updated_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Cache> fetchByUpdatedTs(Timestamp... values) {
        return fetch(Cache.CACHE.UPDATED_TS, values);
    }
}
