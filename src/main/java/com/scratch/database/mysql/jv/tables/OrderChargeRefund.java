/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables;


import com.scratch.database.mysql.jv.Indexes;
import com.scratch.database.mysql.jv.JvB2cDev;
import com.scratch.database.mysql.jv.Keys;
import com.scratch.database.mysql.jv.tables.records.OrderChargeRefundRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderChargeRefund extends TableImpl<OrderChargeRefundRecord> {

    private static final long serialVersionUID = -1498807037;

    /**
     * The reference instance of <code>jv_b2c_dev.order_charge_refund</code>
     */
    public static final OrderChargeRefund ORDER_CHARGE_REFUND = new OrderChargeRefund();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderChargeRefundRecord> getRecordType() {
        return OrderChargeRefundRecord.class;
    }

    /**
     * The column <code>jv_b2c_dev.order_charge_refund.id</code>.
     */
    public final TableField<OrderChargeRefundRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>jv_b2c_dev.order_charge_refund.order_id</code>.
     */
    public final TableField<OrderChargeRefundRecord, UInteger> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.order_charge_refund.stripe_charge_id</code>.
     */
    public final TableField<OrderChargeRefundRecord, String> STRIPE_CHARGE_ID = createField("stripe_charge_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.order_charge_refund.stripe_refund_id</code>.
     */
    public final TableField<OrderChargeRefundRecord, String> STRIPE_REFUND_ID = createField("stripe_refund_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>jv_b2c_dev.order_charge_refund</code> table reference
     */
    public OrderChargeRefund() {
        this(DSL.name("order_charge_refund"), null);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.order_charge_refund</code> table reference
     */
    public OrderChargeRefund(String alias) {
        this(DSL.name(alias), ORDER_CHARGE_REFUND);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.order_charge_refund</code> table reference
     */
    public OrderChargeRefund(Name alias) {
        this(alias, ORDER_CHARGE_REFUND);
    }

    private OrderChargeRefund(Name alias, Table<OrderChargeRefundRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderChargeRefund(Name alias, Table<OrderChargeRefundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OrderChargeRefund(Table<O> child, ForeignKey<O, OrderChargeRefundRecord> key) {
        super(child, key, ORDER_CHARGE_REFUND);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JvB2cDev.JV_B2C_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_UINDEX, Indexes.ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_FK, Indexes.ORDER_CHARGE_REFUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderChargeRefundRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ORDER_CHARGE_REFUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderChargeRefundRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_CHARGE_REFUND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderChargeRefundRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderChargeRefundRecord>>asList(Keys.KEY_ORDER_CHARGE_REFUND_PRIMARY, Keys.KEY_ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderChargeRefund as(String alias) {
        return new OrderChargeRefund(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderChargeRefund as(Name alias) {
        return new OrderChargeRefund(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderChargeRefund rename(String name) {
        return new OrderChargeRefund(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderChargeRefund rename(Name name) {
        return new OrderChargeRefund(name, null);
    }
}
