/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv;


import com.scratch.database.mysql.jv.tables.Account;
import com.scratch.database.mysql.jv.tables.AccountFilter;
import com.scratch.database.mysql.jv.tables.AccountProduct;
import com.scratch.database.mysql.jv.tables.AccountRecipe;
import com.scratch.database.mysql.jv.tables.Address;
import com.scratch.database.mysql.jv.tables.Admin;
import com.scratch.database.mysql.jv.tables.Banner;
import com.scratch.database.mysql.jv.tables.Cache;
import com.scratch.database.mysql.jv.tables.Carousel;
import com.scratch.database.mysql.jv.tables.Cart;
import com.scratch.database.mysql.jv.tables.Category;
import com.scratch.database.mysql.jv.tables.CategoryRelation;
import com.scratch.database.mysql.jv.tables.Code;
import com.scratch.database.mysql.jv.tables.CodeType;
import com.scratch.database.mysql.jv.tables.Comment;
import com.scratch.database.mysql.jv.tables.Content;
import com.scratch.database.mysql.jv.tables.Feature;
import com.scratch.database.mysql.jv.tables.Image;
import com.scratch.database.mysql.jv.tables.Ingredient;
import com.scratch.database.mysql.jv.tables.Log;
import com.scratch.database.mysql.jv.tables.Order;
import com.scratch.database.mysql.jv.tables.OrderChargeRefund;
import com.scratch.database.mysql.jv.tables.OrderItem;
import com.scratch.database.mysql.jv.tables.OrderTrackingInfo;
import com.scratch.database.mysql.jv.tables.Product;
import com.scratch.database.mysql.jv.tables.ProductAvailability;
import com.scratch.database.mysql.jv.tables.ProductCategory;
import com.scratch.database.mysql.jv.tables.ProductPrice;
import com.scratch.database.mysql.jv.tables.PromotionDetail;
import com.scratch.database.mysql.jv.tables.PromotionHeader;
import com.scratch.database.mysql.jv.tables.PromotionUsage;
import com.scratch.database.mysql.jv.tables.Recipe;
import com.scratch.database.mysql.jv.tables.RecipeCategory;
import com.scratch.database.mysql.jv.tables.RecipeCategoryRelation;
import com.scratch.database.mysql.jv.tables.RecipeIngredient;
import com.scratch.database.mysql.jv.tables.RecipeIngredientGroup;
import com.scratch.database.mysql.jv.tables.RelatedItems;
import com.scratch.database.mysql.jv.tables.S2kOrderStatusCode;
import com.scratch.database.mysql.jv.tables.SearchKeyword;
import com.scratch.database.mysql.jv.tables.Session;
import com.scratch.database.mysql.jv.tables.Store;
import com.scratch.database.mysql.jv.tables.Tag;
import com.scratch.database.mysql.jv.tables.TagGroup;
import com.scratch.database.mysql.jv.tables.TagRelation;
import com.scratch.database.mysql.jv.tables.Uom;
import com.scratch.database.mysql.jv.tables.records.AccountFilterRecord;
import com.scratch.database.mysql.jv.tables.records.AccountProductRecord;
import com.scratch.database.mysql.jv.tables.records.AccountRecipeRecord;
import com.scratch.database.mysql.jv.tables.records.AccountRecord;
import com.scratch.database.mysql.jv.tables.records.AddressRecord;
import com.scratch.database.mysql.jv.tables.records.AdminRecord;
import com.scratch.database.mysql.jv.tables.records.BannerRecord;
import com.scratch.database.mysql.jv.tables.records.CacheRecord;
import com.scratch.database.mysql.jv.tables.records.CarouselRecord;
import com.scratch.database.mysql.jv.tables.records.CartRecord;
import com.scratch.database.mysql.jv.tables.records.CategoryRecord;
import com.scratch.database.mysql.jv.tables.records.CategoryRelationRecord;
import com.scratch.database.mysql.jv.tables.records.CodeRecord;
import com.scratch.database.mysql.jv.tables.records.CodeTypeRecord;
import com.scratch.database.mysql.jv.tables.records.CommentRecord;
import com.scratch.database.mysql.jv.tables.records.ContentRecord;
import com.scratch.database.mysql.jv.tables.records.FeatureRecord;
import com.scratch.database.mysql.jv.tables.records.ImageRecord;
import com.scratch.database.mysql.jv.tables.records.IngredientRecord;
import com.scratch.database.mysql.jv.tables.records.LogRecord;
import com.scratch.database.mysql.jv.tables.records.OrderChargeRefundRecord;
import com.scratch.database.mysql.jv.tables.records.OrderItemRecord;
import com.scratch.database.mysql.jv.tables.records.OrderRecord;
import com.scratch.database.mysql.jv.tables.records.OrderTrackingInfoRecord;
import com.scratch.database.mysql.jv.tables.records.ProductAvailabilityRecord;
import com.scratch.database.mysql.jv.tables.records.ProductCategoryRecord;
import com.scratch.database.mysql.jv.tables.records.ProductPriceRecord;
import com.scratch.database.mysql.jv.tables.records.ProductRecord;
import com.scratch.database.mysql.jv.tables.records.PromotionDetailRecord;
import com.scratch.database.mysql.jv.tables.records.PromotionHeaderRecord;
import com.scratch.database.mysql.jv.tables.records.PromotionUsageRecord;
import com.scratch.database.mysql.jv.tables.records.RecipeCategoryRecord;
import com.scratch.database.mysql.jv.tables.records.RecipeCategoryRelationRecord;
import com.scratch.database.mysql.jv.tables.records.RecipeIngredientGroupRecord;
import com.scratch.database.mysql.jv.tables.records.RecipeIngredientRecord;
import com.scratch.database.mysql.jv.tables.records.RecipeRecord;
import com.scratch.database.mysql.jv.tables.records.RelatedItemsRecord;
import com.scratch.database.mysql.jv.tables.records.S2kOrderStatusCodeRecord;
import com.scratch.database.mysql.jv.tables.records.SearchKeywordRecord;
import com.scratch.database.mysql.jv.tables.records.SessionRecord;
import com.scratch.database.mysql.jv.tables.records.StoreRecord;
import com.scratch.database.mysql.jv.tables.records.TagGroupRecord;
import com.scratch.database.mysql.jv.tables.records.TagRecord;
import com.scratch.database.mysql.jv.tables.records.TagRelationRecord;
import com.scratch.database.mysql.jv.tables.records.UomRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>jv_b2c_dev</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, ULong> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<AccountFilterRecord, ULong> IDENTITY_ACCOUNT_FILTER = Identities0.IDENTITY_ACCOUNT_FILTER;
    public static final Identity<AccountProductRecord, ULong> IDENTITY_ACCOUNT_PRODUCT = Identities0.IDENTITY_ACCOUNT_PRODUCT;
    public static final Identity<AccountRecipeRecord, ULong> IDENTITY_ACCOUNT_RECIPE = Identities0.IDENTITY_ACCOUNT_RECIPE;
    public static final Identity<AddressRecord, ULong> IDENTITY_ADDRESS = Identities0.IDENTITY_ADDRESS;
    public static final Identity<AdminRecord, ULong> IDENTITY_ADMIN = Identities0.IDENTITY_ADMIN;
    public static final Identity<BannerRecord, ULong> IDENTITY_BANNER = Identities0.IDENTITY_BANNER;
    public static final Identity<CacheRecord, Integer> IDENTITY_CACHE = Identities0.IDENTITY_CACHE;
    public static final Identity<CarouselRecord, ULong> IDENTITY_CAROUSEL = Identities0.IDENTITY_CAROUSEL;
    public static final Identity<CartRecord, ULong> IDENTITY_CART = Identities0.IDENTITY_CART;
    public static final Identity<CategoryRecord, ULong> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<CategoryRelationRecord, ULong> IDENTITY_CATEGORY_RELATION = Identities0.IDENTITY_CATEGORY_RELATION;
    public static final Identity<CodeRecord, Long> IDENTITY_CODE = Identities0.IDENTITY_CODE;
    public static final Identity<CodeTypeRecord, Long> IDENTITY_CODE_TYPE = Identities0.IDENTITY_CODE_TYPE;
    public static final Identity<CommentRecord, ULong> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
    public static final Identity<ContentRecord, ULong> IDENTITY_CONTENT = Identities0.IDENTITY_CONTENT;
    public static final Identity<FeatureRecord, ULong> IDENTITY_FEATURE = Identities0.IDENTITY_FEATURE;
    public static final Identity<ImageRecord, ULong> IDENTITY_IMAGE = Identities0.IDENTITY_IMAGE;
    public static final Identity<IngredientRecord, ULong> IDENTITY_INGREDIENT = Identities0.IDENTITY_INGREDIENT;
    public static final Identity<LogRecord, ULong> IDENTITY_LOG = Identities0.IDENTITY_LOG;
    public static final Identity<OrderRecord, ULong> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;
    public static final Identity<OrderChargeRefundRecord, UInteger> IDENTITY_ORDER_CHARGE_REFUND = Identities0.IDENTITY_ORDER_CHARGE_REFUND;
    public static final Identity<OrderItemRecord, ULong> IDENTITY_ORDER_ITEM = Identities0.IDENTITY_ORDER_ITEM;
    public static final Identity<OrderTrackingInfoRecord, ULong> IDENTITY_ORDER_TRACKING_INFO = Identities0.IDENTITY_ORDER_TRACKING_INFO;
    public static final Identity<ProductRecord, ULong> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;
    public static final Identity<ProductAvailabilityRecord, ULong> IDENTITY_PRODUCT_AVAILABILITY = Identities0.IDENTITY_PRODUCT_AVAILABILITY;
    public static final Identity<ProductCategoryRecord, ULong> IDENTITY_PRODUCT_CATEGORY = Identities0.IDENTITY_PRODUCT_CATEGORY;
    public static final Identity<ProductPriceRecord, ULong> IDENTITY_PRODUCT_PRICE = Identities0.IDENTITY_PRODUCT_PRICE;
    public static final Identity<PromotionDetailRecord, ULong> IDENTITY_PROMOTION_DETAIL = Identities0.IDENTITY_PROMOTION_DETAIL;
    public static final Identity<PromotionHeaderRecord, ULong> IDENTITY_PROMOTION_HEADER = Identities0.IDENTITY_PROMOTION_HEADER;
    public static final Identity<PromotionUsageRecord, ULong> IDENTITY_PROMOTION_USAGE = Identities0.IDENTITY_PROMOTION_USAGE;
    public static final Identity<RecipeRecord, ULong> IDENTITY_RECIPE = Identities0.IDENTITY_RECIPE;
    public static final Identity<RecipeCategoryRecord, ULong> IDENTITY_RECIPE_CATEGORY = Identities0.IDENTITY_RECIPE_CATEGORY;
    public static final Identity<RecipeCategoryRelationRecord, ULong> IDENTITY_RECIPE_CATEGORY_RELATION = Identities0.IDENTITY_RECIPE_CATEGORY_RELATION;
    public static final Identity<RecipeIngredientRecord, ULong> IDENTITY_RECIPE_INGREDIENT = Identities0.IDENTITY_RECIPE_INGREDIENT;
    public static final Identity<RecipeIngredientGroupRecord, ULong> IDENTITY_RECIPE_INGREDIENT_GROUP = Identities0.IDENTITY_RECIPE_INGREDIENT_GROUP;
    public static final Identity<RelatedItemsRecord, ULong> IDENTITY_RELATED_ITEMS = Identities0.IDENTITY_RELATED_ITEMS;
    public static final Identity<S2kOrderStatusCodeRecord, Integer> IDENTITY_S2K_ORDER_STATUS_CODE = Identities0.IDENTITY_S2K_ORDER_STATUS_CODE;
    public static final Identity<SearchKeywordRecord, ULong> IDENTITY_SEARCH_KEYWORD = Identities0.IDENTITY_SEARCH_KEYWORD;
    public static final Identity<StoreRecord, ULong> IDENTITY_STORE = Identities0.IDENTITY_STORE;
    public static final Identity<TagRecord, ULong> IDENTITY_TAG = Identities0.IDENTITY_TAG;
    public static final Identity<TagGroupRecord, ULong> IDENTITY_TAG_GROUP = Identities0.IDENTITY_TAG_GROUP;
    public static final Identity<TagRelationRecord, ULong> IDENTITY_TAG_RELATION = Identities0.IDENTITY_TAG_RELATION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
    public static final UniqueKey<AccountRecord> KEY_ACCOUNT_USERNAME = UniqueKeys0.KEY_ACCOUNT_USERNAME;
    public static final UniqueKey<AccountFilterRecord> KEY_ACCOUNT_FILTER_PRIMARY = UniqueKeys0.KEY_ACCOUNT_FILTER_PRIMARY;
    public static final UniqueKey<AccountProductRecord> KEY_ACCOUNT_PRODUCT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRODUCT_PRIMARY;
    public static final UniqueKey<AccountRecipeRecord> KEY_ACCOUNT_RECIPE_PRIMARY = UniqueKeys0.KEY_ACCOUNT_RECIPE_PRIMARY;
    public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = UniqueKeys0.KEY_ADDRESS_PRIMARY;
    public static final UniqueKey<AdminRecord> KEY_ADMIN_PRIMARY = UniqueKeys0.KEY_ADMIN_PRIMARY;
    public static final UniqueKey<BannerRecord> KEY_BANNER_PRIMARY = UniqueKeys0.KEY_BANNER_PRIMARY;
    public static final UniqueKey<CacheRecord> KEY_CACHE_PRIMARY = UniqueKeys0.KEY_CACHE_PRIMARY;
    public static final UniqueKey<CacheRecord> KEY_CACHE_CACHE_KEY_UINDEX = UniqueKeys0.KEY_CACHE_CACHE_KEY_UINDEX;
    public static final UniqueKey<CarouselRecord> KEY_CAROUSEL_PRIMARY = UniqueKeys0.KEY_CAROUSEL_PRIMARY;
    public static final UniqueKey<CartRecord> KEY_CART_PRIMARY = UniqueKeys0.KEY_CART_PRIMARY;
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = UniqueKeys0.KEY_CATEGORY_PRIMARY;
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_URL = UniqueKeys0.KEY_CATEGORY_URL;
    public static final UniqueKey<CategoryRelationRecord> KEY_CATEGORY_RELATION_PRIMARY = UniqueKeys0.KEY_CATEGORY_RELATION_PRIMARY;
    public static final UniqueKey<CodeRecord> KEY_CODE_PRIMARY = UniqueKeys0.KEY_CODE_PRIMARY;
    public static final UniqueKey<CodeTypeRecord> KEY_CODE_TYPE_PRIMARY = UniqueKeys0.KEY_CODE_TYPE_PRIMARY;
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = UniqueKeys0.KEY_COMMENT_PRIMARY;
    public static final UniqueKey<ContentRecord> KEY_CONTENT_PRIMARY = UniqueKeys0.KEY_CONTENT_PRIMARY;
    public static final UniqueKey<ContentRecord> KEY_CONTENT_URL = UniqueKeys0.KEY_CONTENT_URL;
    public static final UniqueKey<FeatureRecord> KEY_FEATURE_PRIMARY = UniqueKeys0.KEY_FEATURE_PRIMARY;
    public static final UniqueKey<ImageRecord> KEY_IMAGE_PRIMARY = UniqueKeys0.KEY_IMAGE_PRIMARY;
    public static final UniqueKey<ImageRecord> KEY_IMAGE_URL = UniqueKeys0.KEY_IMAGE_URL;
    public static final UniqueKey<IngredientRecord> KEY_INGREDIENT_PRIMARY = UniqueKeys0.KEY_INGREDIENT_PRIMARY;
    public static final UniqueKey<LogRecord> KEY_LOG_PRIMARY = UniqueKeys0.KEY_LOG_PRIMARY;
    public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = UniqueKeys0.KEY_ORDER_PRIMARY;
    public static final UniqueKey<OrderChargeRefundRecord> KEY_ORDER_CHARGE_REFUND_PRIMARY = UniqueKeys0.KEY_ORDER_CHARGE_REFUND_PRIMARY;
    public static final UniqueKey<OrderChargeRefundRecord> KEY_ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_UINDEX = UniqueKeys0.KEY_ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_UINDEX;
    public static final UniqueKey<OrderItemRecord> KEY_ORDER_ITEM_PRIMARY = UniqueKeys0.KEY_ORDER_ITEM_PRIMARY;
    public static final UniqueKey<OrderTrackingInfoRecord> KEY_ORDER_TRACKING_INFO_PRIMARY = UniqueKeys0.KEY_ORDER_TRACKING_INFO_PRIMARY;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRIMARY;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_ITEM_NUMBER = UniqueKeys0.KEY_PRODUCT_ITEM_NUMBER;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_URL = UniqueKeys0.KEY_PRODUCT_URL;
    public static final UniqueKey<ProductAvailabilityRecord> KEY_PRODUCT_AVAILABILITY_PRIMARY = UniqueKeys0.KEY_PRODUCT_AVAILABILITY_PRIMARY;
    public static final UniqueKey<ProductAvailabilityRecord> KEY_PRODUCT_AVAILABILITY_PRODUCT_AVAILABILITY_ITEM_NUMBER_UINDEX = UniqueKeys0.KEY_PRODUCT_AVAILABILITY_PRODUCT_AVAILABILITY_ITEM_NUMBER_UINDEX;
    public static final UniqueKey<ProductCategoryRecord> KEY_PRODUCT_CATEGORY_PRIMARY = UniqueKeys0.KEY_PRODUCT_CATEGORY_PRIMARY;
    public static final UniqueKey<ProductPriceRecord> KEY_PRODUCT_PRICE_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRICE_PRIMARY;
    public static final UniqueKey<ProductPriceRecord> KEY_PRODUCT_PRICE_PRODUCT_PRICE_ITEM_NUMBER_UINDEX = UniqueKeys0.KEY_PRODUCT_PRICE_PRODUCT_PRICE_ITEM_NUMBER_UINDEX;
    public static final UniqueKey<PromotionDetailRecord> KEY_PROMOTION_DETAIL_PRIMARY = UniqueKeys0.KEY_PROMOTION_DETAIL_PRIMARY;
    public static final UniqueKey<PromotionDetailRecord> KEY_PROMOTION_DETAIL_PROMOTION_DETAIL_ID_UINDEX = UniqueKeys0.KEY_PROMOTION_DETAIL_PROMOTION_DETAIL_ID_UINDEX;
    public static final UniqueKey<PromotionHeaderRecord> KEY_PROMOTION_HEADER_PRIMARY = UniqueKeys0.KEY_PROMOTION_HEADER_PRIMARY;
    public static final UniqueKey<PromotionHeaderRecord> KEY_PROMOTION_HEADER_PROMOTION_HEADER_CODE_UINDEX = UniqueKeys0.KEY_PROMOTION_HEADER_PROMOTION_HEADER_CODE_UINDEX;
    public static final UniqueKey<PromotionUsageRecord> KEY_PROMOTION_USAGE_PRIMARY = UniqueKeys0.KEY_PROMOTION_USAGE_PRIMARY;
    public static final UniqueKey<PromotionUsageRecord> KEY_PROMOTION_USAGE_PROMOTION_USAGE_ID_UINDEX = UniqueKeys0.KEY_PROMOTION_USAGE_PROMOTION_USAGE_ID_UINDEX;
    public static final UniqueKey<RecipeRecord> KEY_RECIPE_PRIMARY = UniqueKeys0.KEY_RECIPE_PRIMARY;
    public static final UniqueKey<RecipeCategoryRecord> KEY_RECIPE_CATEGORY_PRIMARY = UniqueKeys0.KEY_RECIPE_CATEGORY_PRIMARY;
    public static final UniqueKey<RecipeCategoryRecord> KEY_RECIPE_CATEGORY_URL = UniqueKeys0.KEY_RECIPE_CATEGORY_URL;
    public static final UniqueKey<RecipeCategoryRelationRecord> KEY_RECIPE_CATEGORY_RELATION_PRIMARY = UniqueKeys0.KEY_RECIPE_CATEGORY_RELATION_PRIMARY;
    public static final UniqueKey<RecipeIngredientRecord> KEY_RECIPE_INGREDIENT_PRIMARY = UniqueKeys0.KEY_RECIPE_INGREDIENT_PRIMARY;
    public static final UniqueKey<RecipeIngredientGroupRecord> KEY_RECIPE_INGREDIENT_GROUP_PRIMARY = UniqueKeys0.KEY_RECIPE_INGREDIENT_GROUP_PRIMARY;
    public static final UniqueKey<RelatedItemsRecord> KEY_RELATED_ITEMS_PRIMARY = UniqueKeys0.KEY_RELATED_ITEMS_PRIMARY;
    public static final UniqueKey<S2kOrderStatusCodeRecord> KEY_S2K_ORDER_STATUS_CODE_PRIMARY = UniqueKeys0.KEY_S2K_ORDER_STATUS_CODE_PRIMARY;
    public static final UniqueKey<S2kOrderStatusCodeRecord> KEY_S2K_ORDER_STATUS_CODE_S2K_ORDER_STATUS_CODE_ID_UINDEX = UniqueKeys0.KEY_S2K_ORDER_STATUS_CODE_S2K_ORDER_STATUS_CODE_ID_UINDEX;
    public static final UniqueKey<SearchKeywordRecord> KEY_SEARCH_KEYWORD_PRIMARY = UniqueKeys0.KEY_SEARCH_KEYWORD_PRIMARY;
    public static final UniqueKey<SessionRecord> KEY_SESSION_PRIMARY = UniqueKeys0.KEY_SESSION_PRIMARY;
    public static final UniqueKey<StoreRecord> KEY_STORE_PRIMARY = UniqueKeys0.KEY_STORE_PRIMARY;
    public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = UniqueKeys0.KEY_TAG_PRIMARY;
    public static final UniqueKey<TagGroupRecord> KEY_TAG_GROUP_PRIMARY = UniqueKeys0.KEY_TAG_GROUP_PRIMARY;
    public static final UniqueKey<TagRelationRecord> KEY_TAG_RELATION_PRIMARY = UniqueKeys0.KEY_TAG_RELATION_PRIMARY;
    public static final UniqueKey<UomRecord> KEY_UOM_PRIMARY = UniqueKeys0.KEY_UOM_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountFilterRecord, AccountRecord> ACCOUNT_FILTER_ACCOUNT_ID_FK = ForeignKeys0.ACCOUNT_FILTER_ACCOUNT_ID_FK;
    public static final ForeignKey<BannerRecord, ContentRecord> BANNER_CONTENT_ID_FK = ForeignKeys0.BANNER_CONTENT_ID_FK;
    public static final ForeignKey<BannerRecord, PromotionHeaderRecord> BANNER_PROMOTION_HEADER_ID_FK = ForeignKeys0.BANNER_PROMOTION_HEADER_ID_FK;
    public static final ForeignKey<CategoryRelationRecord, CategoryRecord> CATEGORY_RELATION_IBFK_1 = ForeignKeys0.CATEGORY_RELATION_IBFK_1;
    public static final ForeignKey<CategoryRelationRecord, CategoryRecord> CATEGORY_RELATION_IBFK_2 = ForeignKeys0.CATEGORY_RELATION_IBFK_2;
    public static final ForeignKey<OrderRecord, AccountRecord> ORDER_IBFK_3 = ForeignKeys0.ORDER_IBFK_3;
    public static final ForeignKey<OrderRecord, UomRecord> ORDER_IBFK_1 = ForeignKeys0.ORDER_IBFK_1;
    public static final ForeignKey<OrderRecord, UomRecord> ORDER_IBFK_2 = ForeignKeys0.ORDER_IBFK_2;
    public static final ForeignKey<OrderItemRecord, OrderRecord> ORDER_ITEM_IBFK_1 = ForeignKeys0.ORDER_ITEM_IBFK_1;
    public static final ForeignKey<OrderItemRecord, UomRecord> ORDER_ITEM_IBFK_3 = ForeignKeys0.ORDER_ITEM_IBFK_3;
    public static final ForeignKey<OrderItemRecord, PromotionHeaderRecord> ORDER_ITEM_IBFK_5 = ForeignKeys0.ORDER_ITEM_IBFK_5;
    public static final ForeignKey<OrderTrackingInfoRecord, OrderRecord> ORDER_TRACKING_INFO_IBFK_1 = ForeignKeys0.ORDER_TRACKING_INFO_IBFK_1;
    public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK = ForeignKeys0.PRODUCT_UOM_ID_FK;
    public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK_2 = ForeignKeys0.PRODUCT_UOM_ID_FK_2;
    public static final ForeignKey<ProductRecord, ProductRecord> PRODUCT_PRODUCT_ITEM_NUMBER_FK = ForeignKeys0.PRODUCT_PRODUCT_ITEM_NUMBER_FK;
    public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK_3 = ForeignKeys0.PRODUCT_UOM_ID_FK_3;
    public static final ForeignKey<ProductCategoryRecord, ProductRecord> PRODUCT_CATEGORY_IBFK_1 = ForeignKeys0.PRODUCT_CATEGORY_IBFK_1;
    public static final ForeignKey<ProductCategoryRecord, CategoryRecord> PRODUCT_CATEGORY_IBFK_2 = ForeignKeys0.PRODUCT_CATEGORY_IBFK_2;
    public static final ForeignKey<PromotionDetailRecord, PromotionHeaderRecord> PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK = ForeignKeys0.PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK;
    public static final ForeignKey<PromotionUsageRecord, PromotionHeaderRecord> PROMOTION_USAGE_PROMOTION_HEADER_ID_FK = ForeignKeys0.PROMOTION_USAGE_PROMOTION_HEADER_ID_FK;
    public static final ForeignKey<PromotionUsageRecord, AccountRecord> PROMOTION_USAGE_ACCOUNT_ID_FK = ForeignKeys0.PROMOTION_USAGE_ACCOUNT_ID_FK;
    public static final ForeignKey<RecipeCategoryRelationRecord, RecipeRecord> RECIPE_CATEGORY_IBFK_1 = ForeignKeys0.RECIPE_CATEGORY_IBFK_1;
    public static final ForeignKey<RecipeCategoryRelationRecord, RecipeCategoryRecord> RECIPE_CATEGORY_IBFK_2 = ForeignKeys0.RECIPE_CATEGORY_IBFK_2;
    public static final ForeignKey<RecipeIngredientRecord, RecipeIngredientGroupRecord> RECIPE_INGREDIENT_IBFK_2 = ForeignKeys0.RECIPE_INGREDIENT_IBFK_2;
    public static final ForeignKey<RecipeIngredientRecord, UomRecord> RECIPE_INGREDIENT_IBFK_3 = ForeignKeys0.RECIPE_INGREDIENT_IBFK_3;
    public static final ForeignKey<RecipeIngredientGroupRecord, RecipeRecord> RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK = ForeignKeys0.RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK;
    public static final ForeignKey<TagRecord, TagGroupRecord> TAG_IBFK_1 = ForeignKeys0.TAG_IBFK_1;
    public static final ForeignKey<TagRelationRecord, TagRecord> TAG_RELATION_IBFK_1 = ForeignKeys0.TAG_RELATION_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountRecord, ULong> IDENTITY_ACCOUNT = Internal.createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<AccountFilterRecord, ULong> IDENTITY_ACCOUNT_FILTER = Internal.createIdentity(AccountFilter.ACCOUNT_FILTER, AccountFilter.ACCOUNT_FILTER.ID);
        public static Identity<AccountProductRecord, ULong> IDENTITY_ACCOUNT_PRODUCT = Internal.createIdentity(AccountProduct.ACCOUNT_PRODUCT, AccountProduct.ACCOUNT_PRODUCT.ID);
        public static Identity<AccountRecipeRecord, ULong> IDENTITY_ACCOUNT_RECIPE = Internal.createIdentity(AccountRecipe.ACCOUNT_RECIPE, AccountRecipe.ACCOUNT_RECIPE.ID);
        public static Identity<AddressRecord, ULong> IDENTITY_ADDRESS = Internal.createIdentity(Address.ADDRESS, Address.ADDRESS.ID);
        public static Identity<AdminRecord, ULong> IDENTITY_ADMIN = Internal.createIdentity(Admin.ADMIN, Admin.ADMIN.ID);
        public static Identity<BannerRecord, ULong> IDENTITY_BANNER = Internal.createIdentity(Banner.BANNER, Banner.BANNER.ID);
        public static Identity<CacheRecord, Integer> IDENTITY_CACHE = Internal.createIdentity(Cache.CACHE, Cache.CACHE.ID);
        public static Identity<CarouselRecord, ULong> IDENTITY_CAROUSEL = Internal.createIdentity(Carousel.CAROUSEL, Carousel.CAROUSEL.ID);
        public static Identity<CartRecord, ULong> IDENTITY_CART = Internal.createIdentity(Cart.CART, Cart.CART.ID);
        public static Identity<CategoryRecord, ULong> IDENTITY_CATEGORY = Internal.createIdentity(Category.CATEGORY, Category.CATEGORY.ID);
        public static Identity<CategoryRelationRecord, ULong> IDENTITY_CATEGORY_RELATION = Internal.createIdentity(CategoryRelation.CATEGORY_RELATION, CategoryRelation.CATEGORY_RELATION.ID);
        public static Identity<CodeRecord, Long> IDENTITY_CODE = Internal.createIdentity(Code.CODE, Code.CODE.ID);
        public static Identity<CodeTypeRecord, Long> IDENTITY_CODE_TYPE = Internal.createIdentity(CodeType.CODE_TYPE, CodeType.CODE_TYPE.ID);
        public static Identity<CommentRecord, ULong> IDENTITY_COMMENT = Internal.createIdentity(Comment.COMMENT, Comment.COMMENT.ID);
        public static Identity<ContentRecord, ULong> IDENTITY_CONTENT = Internal.createIdentity(Content.CONTENT, Content.CONTENT.ID);
        public static Identity<FeatureRecord, ULong> IDENTITY_FEATURE = Internal.createIdentity(Feature.FEATURE, Feature.FEATURE.ID);
        public static Identity<ImageRecord, ULong> IDENTITY_IMAGE = Internal.createIdentity(Image.IMAGE, Image.IMAGE.ID);
        public static Identity<IngredientRecord, ULong> IDENTITY_INGREDIENT = Internal.createIdentity(Ingredient.INGREDIENT, Ingredient.INGREDIENT.ID);
        public static Identity<LogRecord, ULong> IDENTITY_LOG = Internal.createIdentity(Log.LOG, Log.LOG.ID);
        public static Identity<OrderRecord, ULong> IDENTITY_ORDER = Internal.createIdentity(Order.ORDER, Order.ORDER.ID);
        public static Identity<OrderChargeRefundRecord, UInteger> IDENTITY_ORDER_CHARGE_REFUND = Internal.createIdentity(OrderChargeRefund.ORDER_CHARGE_REFUND, OrderChargeRefund.ORDER_CHARGE_REFUND.ID);
        public static Identity<OrderItemRecord, ULong> IDENTITY_ORDER_ITEM = Internal.createIdentity(OrderItem.ORDER_ITEM, OrderItem.ORDER_ITEM.ID);
        public static Identity<OrderTrackingInfoRecord, ULong> IDENTITY_ORDER_TRACKING_INFO = Internal.createIdentity(OrderTrackingInfo.ORDER_TRACKING_INFO, OrderTrackingInfo.ORDER_TRACKING_INFO.ID);
        public static Identity<ProductRecord, ULong> IDENTITY_PRODUCT = Internal.createIdentity(Product.PRODUCT, Product.PRODUCT.ID);
        public static Identity<ProductAvailabilityRecord, ULong> IDENTITY_PRODUCT_AVAILABILITY = Internal.createIdentity(ProductAvailability.PRODUCT_AVAILABILITY, ProductAvailability.PRODUCT_AVAILABILITY.ID);
        public static Identity<ProductCategoryRecord, ULong> IDENTITY_PRODUCT_CATEGORY = Internal.createIdentity(ProductCategory.PRODUCT_CATEGORY, ProductCategory.PRODUCT_CATEGORY.ID);
        public static Identity<ProductPriceRecord, ULong> IDENTITY_PRODUCT_PRICE = Internal.createIdentity(ProductPrice.PRODUCT_PRICE, ProductPrice.PRODUCT_PRICE.ID);
        public static Identity<PromotionDetailRecord, ULong> IDENTITY_PROMOTION_DETAIL = Internal.createIdentity(PromotionDetail.PROMOTION_DETAIL, PromotionDetail.PROMOTION_DETAIL.ID);
        public static Identity<PromotionHeaderRecord, ULong> IDENTITY_PROMOTION_HEADER = Internal.createIdentity(PromotionHeader.PROMOTION_HEADER, PromotionHeader.PROMOTION_HEADER.ID);
        public static Identity<PromotionUsageRecord, ULong> IDENTITY_PROMOTION_USAGE = Internal.createIdentity(PromotionUsage.PROMOTION_USAGE, PromotionUsage.PROMOTION_USAGE.ID);
        public static Identity<RecipeRecord, ULong> IDENTITY_RECIPE = Internal.createIdentity(Recipe.RECIPE, Recipe.RECIPE.ID);
        public static Identity<RecipeCategoryRecord, ULong> IDENTITY_RECIPE_CATEGORY = Internal.createIdentity(RecipeCategory.RECIPE_CATEGORY, RecipeCategory.RECIPE_CATEGORY.ID);
        public static Identity<RecipeCategoryRelationRecord, ULong> IDENTITY_RECIPE_CATEGORY_RELATION = Internal.createIdentity(RecipeCategoryRelation.RECIPE_CATEGORY_RELATION, RecipeCategoryRelation.RECIPE_CATEGORY_RELATION.ID);
        public static Identity<RecipeIngredientRecord, ULong> IDENTITY_RECIPE_INGREDIENT = Internal.createIdentity(RecipeIngredient.RECIPE_INGREDIENT, RecipeIngredient.RECIPE_INGREDIENT.ID);
        public static Identity<RecipeIngredientGroupRecord, ULong> IDENTITY_RECIPE_INGREDIENT_GROUP = Internal.createIdentity(RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP, RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP.ID);
        public static Identity<RelatedItemsRecord, ULong> IDENTITY_RELATED_ITEMS = Internal.createIdentity(RelatedItems.RELATED_ITEMS, RelatedItems.RELATED_ITEMS.ID);
        public static Identity<S2kOrderStatusCodeRecord, Integer> IDENTITY_S2K_ORDER_STATUS_CODE = Internal.createIdentity(S2kOrderStatusCode.S2K_ORDER_STATUS_CODE, S2kOrderStatusCode.S2K_ORDER_STATUS_CODE.ID);
        public static Identity<SearchKeywordRecord, ULong> IDENTITY_SEARCH_KEYWORD = Internal.createIdentity(SearchKeyword.SEARCH_KEYWORD, SearchKeyword.SEARCH_KEYWORD.ID);
        public static Identity<StoreRecord, ULong> IDENTITY_STORE = Internal.createIdentity(Store.STORE, Store.STORE.ID);
        public static Identity<TagRecord, ULong> IDENTITY_TAG = Internal.createIdentity(Tag.TAG, Tag.TAG.ID);
        public static Identity<TagGroupRecord, ULong> IDENTITY_TAG_GROUP = Internal.createIdentity(TagGroup.TAG_GROUP, TagGroup.TAG_GROUP.ID);
        public static Identity<TagRelationRecord, ULong> IDENTITY_TAG_RELATION = Internal.createIdentity(TagRelation.TAG_RELATION, TagRelation.TAG_RELATION.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_PRIMARY = Internal.createUniqueKey(Account.ACCOUNT, "KEY_account_PRIMARY", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> KEY_ACCOUNT_USERNAME = Internal.createUniqueKey(Account.ACCOUNT, "KEY_account_username", Account.ACCOUNT.USERNAME);
        public static final UniqueKey<AccountFilterRecord> KEY_ACCOUNT_FILTER_PRIMARY = Internal.createUniqueKey(AccountFilter.ACCOUNT_FILTER, "KEY_account_filter_PRIMARY", AccountFilter.ACCOUNT_FILTER.ID);
        public static final UniqueKey<AccountProductRecord> KEY_ACCOUNT_PRODUCT_PRIMARY = Internal.createUniqueKey(AccountProduct.ACCOUNT_PRODUCT, "KEY_account_product_PRIMARY", AccountProduct.ACCOUNT_PRODUCT.ID, AccountProduct.ACCOUNT_PRODUCT.ITEM_NUMBER);
        public static final UniqueKey<AccountRecipeRecord> KEY_ACCOUNT_RECIPE_PRIMARY = Internal.createUniqueKey(AccountRecipe.ACCOUNT_RECIPE, "KEY_account_recipe_PRIMARY", AccountRecipe.ACCOUNT_RECIPE.ID);
        public static final UniqueKey<AddressRecord> KEY_ADDRESS_PRIMARY = Internal.createUniqueKey(Address.ADDRESS, "KEY_address_PRIMARY", Address.ADDRESS.ID);
        public static final UniqueKey<AdminRecord> KEY_ADMIN_PRIMARY = Internal.createUniqueKey(Admin.ADMIN, "KEY_admin_PRIMARY", Admin.ADMIN.ID);
        public static final UniqueKey<BannerRecord> KEY_BANNER_PRIMARY = Internal.createUniqueKey(Banner.BANNER, "KEY_banner_PRIMARY", Banner.BANNER.ID);
        public static final UniqueKey<CacheRecord> KEY_CACHE_PRIMARY = Internal.createUniqueKey(Cache.CACHE, "KEY_cache_PRIMARY", Cache.CACHE.ID);
        public static final UniqueKey<CacheRecord> KEY_CACHE_CACHE_KEY_UINDEX = Internal.createUniqueKey(Cache.CACHE, "KEY_cache_cache_key_uindex", Cache.CACHE.HASH_KEY);
        public static final UniqueKey<CarouselRecord> KEY_CAROUSEL_PRIMARY = Internal.createUniqueKey(Carousel.CAROUSEL, "KEY_carousel_PRIMARY", Carousel.CAROUSEL.ID);
        public static final UniqueKey<CartRecord> KEY_CART_PRIMARY = Internal.createUniqueKey(Cart.CART, "KEY_cart_PRIMARY", Cart.CART.ID);
        public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = Internal.createUniqueKey(Category.CATEGORY, "KEY_category_PRIMARY", Category.CATEGORY.ID);
        public static final UniqueKey<CategoryRecord> KEY_CATEGORY_URL = Internal.createUniqueKey(Category.CATEGORY, "KEY_category_url", Category.CATEGORY.URL);
        public static final UniqueKey<CategoryRelationRecord> KEY_CATEGORY_RELATION_PRIMARY = Internal.createUniqueKey(CategoryRelation.CATEGORY_RELATION, "KEY_category_relation_PRIMARY", CategoryRelation.CATEGORY_RELATION.ID);
        public static final UniqueKey<CodeRecord> KEY_CODE_PRIMARY = Internal.createUniqueKey(Code.CODE, "KEY_code_PRIMARY", Code.CODE.ID);
        public static final UniqueKey<CodeTypeRecord> KEY_CODE_TYPE_PRIMARY = Internal.createUniqueKey(CodeType.CODE_TYPE, "KEY_code_type_PRIMARY", CodeType.CODE_TYPE.ID);
        public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = Internal.createUniqueKey(Comment.COMMENT, "KEY_comment_PRIMARY", Comment.COMMENT.ID);
        public static final UniqueKey<ContentRecord> KEY_CONTENT_PRIMARY = Internal.createUniqueKey(Content.CONTENT, "KEY_content_PRIMARY", Content.CONTENT.ID);
        public static final UniqueKey<ContentRecord> KEY_CONTENT_URL = Internal.createUniqueKey(Content.CONTENT, "KEY_content_url", Content.CONTENT.URL);
        public static final UniqueKey<FeatureRecord> KEY_FEATURE_PRIMARY = Internal.createUniqueKey(Feature.FEATURE, "KEY_feature_PRIMARY", Feature.FEATURE.ID);
        public static final UniqueKey<ImageRecord> KEY_IMAGE_PRIMARY = Internal.createUniqueKey(Image.IMAGE, "KEY_image_PRIMARY", Image.IMAGE.ID);
        public static final UniqueKey<ImageRecord> KEY_IMAGE_URL = Internal.createUniqueKey(Image.IMAGE, "KEY_image_url", Image.IMAGE.FILENAME);
        public static final UniqueKey<IngredientRecord> KEY_INGREDIENT_PRIMARY = Internal.createUniqueKey(Ingredient.INGREDIENT, "KEY_ingredient_PRIMARY", Ingredient.INGREDIENT.ID);
        public static final UniqueKey<LogRecord> KEY_LOG_PRIMARY = Internal.createUniqueKey(Log.LOG, "KEY_log_PRIMARY", Log.LOG.ID);
        public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = Internal.createUniqueKey(Order.ORDER, "KEY_order_PRIMARY", Order.ORDER.ID);
        public static final UniqueKey<OrderChargeRefundRecord> KEY_ORDER_CHARGE_REFUND_PRIMARY = Internal.createUniqueKey(OrderChargeRefund.ORDER_CHARGE_REFUND, "KEY_order_charge_refund_PRIMARY", OrderChargeRefund.ORDER_CHARGE_REFUND.ID);
        public static final UniqueKey<OrderChargeRefundRecord> KEY_ORDER_CHARGE_REFUND_ORDER_CHARGE_REFUND_ID_UINDEX = Internal.createUniqueKey(OrderChargeRefund.ORDER_CHARGE_REFUND, "KEY_order_charge_refund_order_charge_refund_id_uindex", OrderChargeRefund.ORDER_CHARGE_REFUND.ID);
        public static final UniqueKey<OrderItemRecord> KEY_ORDER_ITEM_PRIMARY = Internal.createUniqueKey(OrderItem.ORDER_ITEM, "KEY_order_item_PRIMARY", OrderItem.ORDER_ITEM.ID);
        public static final UniqueKey<OrderTrackingInfoRecord> KEY_ORDER_TRACKING_INFO_PRIMARY = Internal.createUniqueKey(OrderTrackingInfo.ORDER_TRACKING_INFO, "KEY_order_tracking_info_PRIMARY", OrderTrackingInfo.ORDER_TRACKING_INFO.ID);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = Internal.createUniqueKey(Product.PRODUCT, "KEY_product_PRIMARY", Product.PRODUCT.ID);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_ITEM_NUMBER = Internal.createUniqueKey(Product.PRODUCT, "KEY_product_item_number", Product.PRODUCT.ITEM_NUMBER);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_URL = Internal.createUniqueKey(Product.PRODUCT, "KEY_product_url", Product.PRODUCT.URL);
        public static final UniqueKey<ProductAvailabilityRecord> KEY_PRODUCT_AVAILABILITY_PRIMARY = Internal.createUniqueKey(ProductAvailability.PRODUCT_AVAILABILITY, "KEY_product_availability_PRIMARY", ProductAvailability.PRODUCT_AVAILABILITY.ID);
        public static final UniqueKey<ProductAvailabilityRecord> KEY_PRODUCT_AVAILABILITY_PRODUCT_AVAILABILITY_ITEM_NUMBER_UINDEX = Internal.createUniqueKey(ProductAvailability.PRODUCT_AVAILABILITY, "KEY_product_availability_product_availability_item_number_uindex", ProductAvailability.PRODUCT_AVAILABILITY.ITEM_NUMBER);
        public static final UniqueKey<ProductCategoryRecord> KEY_PRODUCT_CATEGORY_PRIMARY = Internal.createUniqueKey(ProductCategory.PRODUCT_CATEGORY, "KEY_product_category_PRIMARY", ProductCategory.PRODUCT_CATEGORY.ID);
        public static final UniqueKey<ProductPriceRecord> KEY_PRODUCT_PRICE_PRIMARY = Internal.createUniqueKey(ProductPrice.PRODUCT_PRICE, "KEY_product_price_PRIMARY", ProductPrice.PRODUCT_PRICE.ID);
        public static final UniqueKey<ProductPriceRecord> KEY_PRODUCT_PRICE_PRODUCT_PRICE_ITEM_NUMBER_UINDEX = Internal.createUniqueKey(ProductPrice.PRODUCT_PRICE, "KEY_product_price_product_price_item_number_uindex", ProductPrice.PRODUCT_PRICE.ITEM_NUMBER);
        public static final UniqueKey<PromotionDetailRecord> KEY_PROMOTION_DETAIL_PRIMARY = Internal.createUniqueKey(PromotionDetail.PROMOTION_DETAIL, "KEY_promotion_detail_PRIMARY", PromotionDetail.PROMOTION_DETAIL.ID);
        public static final UniqueKey<PromotionDetailRecord> KEY_PROMOTION_DETAIL_PROMOTION_DETAIL_ID_UINDEX = Internal.createUniqueKey(PromotionDetail.PROMOTION_DETAIL, "KEY_promotion_detail_promotion_detail_id_uindex", PromotionDetail.PROMOTION_DETAIL.ID);
        public static final UniqueKey<PromotionHeaderRecord> KEY_PROMOTION_HEADER_PRIMARY = Internal.createUniqueKey(PromotionHeader.PROMOTION_HEADER, "KEY_promotion_header_PRIMARY", PromotionHeader.PROMOTION_HEADER.ID);
        public static final UniqueKey<PromotionHeaderRecord> KEY_PROMOTION_HEADER_PROMOTION_HEADER_CODE_UINDEX = Internal.createUniqueKey(PromotionHeader.PROMOTION_HEADER, "KEY_promotion_header_promotion_header_code_uindex", PromotionHeader.PROMOTION_HEADER.CODE);
        public static final UniqueKey<PromotionUsageRecord> KEY_PROMOTION_USAGE_PRIMARY = Internal.createUniqueKey(PromotionUsage.PROMOTION_USAGE, "KEY_promotion_usage_PRIMARY", PromotionUsage.PROMOTION_USAGE.ID);
        public static final UniqueKey<PromotionUsageRecord> KEY_PROMOTION_USAGE_PROMOTION_USAGE_ID_UINDEX = Internal.createUniqueKey(PromotionUsage.PROMOTION_USAGE, "KEY_promotion_usage_promotion_usage_id_uindex", PromotionUsage.PROMOTION_USAGE.ID);
        public static final UniqueKey<RecipeRecord> KEY_RECIPE_PRIMARY = Internal.createUniqueKey(Recipe.RECIPE, "KEY_recipe_PRIMARY", Recipe.RECIPE.ID);
        public static final UniqueKey<RecipeCategoryRecord> KEY_RECIPE_CATEGORY_PRIMARY = Internal.createUniqueKey(RecipeCategory.RECIPE_CATEGORY, "KEY_recipe_category_PRIMARY", RecipeCategory.RECIPE_CATEGORY.ID);
        public static final UniqueKey<RecipeCategoryRecord> KEY_RECIPE_CATEGORY_URL = Internal.createUniqueKey(RecipeCategory.RECIPE_CATEGORY, "KEY_recipe_category_url", RecipeCategory.RECIPE_CATEGORY.URL);
        public static final UniqueKey<RecipeCategoryRelationRecord> KEY_RECIPE_CATEGORY_RELATION_PRIMARY = Internal.createUniqueKey(RecipeCategoryRelation.RECIPE_CATEGORY_RELATION, "KEY_recipe_category_relation_PRIMARY", RecipeCategoryRelation.RECIPE_CATEGORY_RELATION.ID);
        public static final UniqueKey<RecipeIngredientRecord> KEY_RECIPE_INGREDIENT_PRIMARY = Internal.createUniqueKey(RecipeIngredient.RECIPE_INGREDIENT, "KEY_recipe_ingredient_PRIMARY", RecipeIngredient.RECIPE_INGREDIENT.ID);
        public static final UniqueKey<RecipeIngredientGroupRecord> KEY_RECIPE_INGREDIENT_GROUP_PRIMARY = Internal.createUniqueKey(RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP, "KEY_recipe_ingredient_group_PRIMARY", RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP.ID);
        public static final UniqueKey<RelatedItemsRecord> KEY_RELATED_ITEMS_PRIMARY = Internal.createUniqueKey(RelatedItems.RELATED_ITEMS, "KEY_related_items_PRIMARY", RelatedItems.RELATED_ITEMS.ID);
        public static final UniqueKey<S2kOrderStatusCodeRecord> KEY_S2K_ORDER_STATUS_CODE_PRIMARY = Internal.createUniqueKey(S2kOrderStatusCode.S2K_ORDER_STATUS_CODE, "KEY_s2k_order_status_code_PRIMARY", S2kOrderStatusCode.S2K_ORDER_STATUS_CODE.ID);
        public static final UniqueKey<S2kOrderStatusCodeRecord> KEY_S2K_ORDER_STATUS_CODE_S2K_ORDER_STATUS_CODE_ID_UINDEX = Internal.createUniqueKey(S2kOrderStatusCode.S2K_ORDER_STATUS_CODE, "KEY_s2k_order_status_code_s2k_order_status_code_id_uindex", S2kOrderStatusCode.S2K_ORDER_STATUS_CODE.ID);
        public static final UniqueKey<SearchKeywordRecord> KEY_SEARCH_KEYWORD_PRIMARY = Internal.createUniqueKey(SearchKeyword.SEARCH_KEYWORD, "KEY_search_keyword_PRIMARY", SearchKeyword.SEARCH_KEYWORD.ID);
        public static final UniqueKey<SessionRecord> KEY_SESSION_PRIMARY = Internal.createUniqueKey(Session.SESSION, "KEY_session_PRIMARY", Session.SESSION.ID);
        public static final UniqueKey<StoreRecord> KEY_STORE_PRIMARY = Internal.createUniqueKey(Store.STORE, "KEY_store_PRIMARY", Store.STORE.ID);
        public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = Internal.createUniqueKey(Tag.TAG, "KEY_tag_PRIMARY", Tag.TAG.ID);
        public static final UniqueKey<TagGroupRecord> KEY_TAG_GROUP_PRIMARY = Internal.createUniqueKey(TagGroup.TAG_GROUP, "KEY_tag_group_PRIMARY", TagGroup.TAG_GROUP.ID);
        public static final UniqueKey<TagRelationRecord> KEY_TAG_RELATION_PRIMARY = Internal.createUniqueKey(TagRelation.TAG_RELATION, "KEY_tag_relation_PRIMARY", TagRelation.TAG_RELATION.ID);
        public static final UniqueKey<UomRecord> KEY_UOM_PRIMARY = Internal.createUniqueKey(Uom.UOM, "KEY_uom_PRIMARY", Uom.UOM.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountFilterRecord, AccountRecord> ACCOUNT_FILTER_ACCOUNT_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_ACCOUNT_PRIMARY, AccountFilter.ACCOUNT_FILTER, "account_filter_account_id_fk", AccountFilter.ACCOUNT_FILTER.ACCOUNT_ID);
        public static final ForeignKey<BannerRecord, ContentRecord> BANNER_CONTENT_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_CONTENT_PRIMARY, Banner.BANNER, "banner_content_id_fk", Banner.BANNER.CONTENT_ID);
        public static final ForeignKey<BannerRecord, PromotionHeaderRecord> BANNER_PROMOTION_HEADER_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PROMOTION_HEADER_PRIMARY, Banner.BANNER, "banner_promotion_header_id_fk", Banner.BANNER.PROMOTION_ID);
        public static final ForeignKey<CategoryRelationRecord, CategoryRecord> CATEGORY_RELATION_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_CATEGORY_PRIMARY, CategoryRelation.CATEGORY_RELATION, "category_relation_ibfk_1", CategoryRelation.CATEGORY_RELATION.CATEGORY_ID);
        public static final ForeignKey<CategoryRelationRecord, CategoryRecord> CATEGORY_RELATION_IBFK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_CATEGORY_PRIMARY, CategoryRelation.CATEGORY_RELATION, "category_relation_ibfk_2", CategoryRelation.CATEGORY_RELATION.PARENT_ID);
        public static final ForeignKey<OrderRecord, AccountRecord> ORDER_IBFK_3 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_ACCOUNT_PRIMARY, Order.ORDER, "order_ibfk_3", Order.ORDER.ACCOUNT_ID);
        public static final ForeignKey<OrderRecord, UomRecord> ORDER_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, Order.ORDER, "order_ibfk_1", Order.ORDER.WEIGHT_UOM);
        public static final ForeignKey<OrderRecord, UomRecord> ORDER_IBFK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, Order.ORDER, "order_ibfk_2", Order.ORDER.CUBIC_VOLUME_UOM);
        public static final ForeignKey<OrderItemRecord, OrderRecord> ORDER_ITEM_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_ORDER_PRIMARY, OrderItem.ORDER_ITEM, "order_item_ibfk_1", OrderItem.ORDER_ITEM.ORDER_ID);
        public static final ForeignKey<OrderItemRecord, UomRecord> ORDER_ITEM_IBFK_3 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, OrderItem.ORDER_ITEM, "order_item_ibfk_3", OrderItem.ORDER_ITEM.WEIGHT_UOM);
        public static final ForeignKey<OrderItemRecord, PromotionHeaderRecord> ORDER_ITEM_IBFK_5 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PROMOTION_HEADER_PRIMARY, OrderItem.ORDER_ITEM, "order_item_ibfk_5", OrderItem.ORDER_ITEM.PROMOTION_ID);
        public static final ForeignKey<OrderTrackingInfoRecord, OrderRecord> ORDER_TRACKING_INFO_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_ORDER_PRIMARY, OrderTrackingInfo.ORDER_TRACKING_INFO, "order_tracking_info_ibfk_1", OrderTrackingInfo.ORDER_TRACKING_INFO.ORDER_ID);
        public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, Product.PRODUCT, "product_uom_id_fk", Product.PRODUCT.UOM);
        public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, Product.PRODUCT, "product_uom_id_fk_2", Product.PRODUCT.ITEM_WEIGHT_UOM);
        public static final ForeignKey<ProductRecord, ProductRecord> PRODUCT_PRODUCT_ITEM_NUMBER_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PRODUCT_ITEM_NUMBER, Product.PRODUCT, "product_product_item_number_fk", Product.PRODUCT.REPLACEMENT_ITEM_NUMBER);
        public static final ForeignKey<ProductRecord, UomRecord> PRODUCT_UOM_ID_FK_3 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, Product.PRODUCT, "product_uom_id_fk_3", Product.PRODUCT.CUBIC_VOLUME_UOM);
        public static final ForeignKey<ProductCategoryRecord, ProductRecord> PRODUCT_CATEGORY_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PRODUCT_ITEM_NUMBER, ProductCategory.PRODUCT_CATEGORY, "product_category_ibfk_1", ProductCategory.PRODUCT_CATEGORY.ITEM_NUMBER);
        public static final ForeignKey<ProductCategoryRecord, CategoryRecord> PRODUCT_CATEGORY_IBFK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_CATEGORY_PRIMARY, ProductCategory.PRODUCT_CATEGORY, "product_category_ibfk_2", ProductCategory.PRODUCT_CATEGORY.CATEGORY_ID);
        public static final ForeignKey<PromotionDetailRecord, PromotionHeaderRecord> PROMOTION_DETAIL_PROMOTION_HEADER_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PROMOTION_HEADER_PRIMARY, PromotionDetail.PROMOTION_DETAIL, "promotion_detail_promotion_header_id_fk", PromotionDetail.PROMOTION_DETAIL.PROMOTION_ID);
        public static final ForeignKey<PromotionUsageRecord, PromotionHeaderRecord> PROMOTION_USAGE_PROMOTION_HEADER_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_PROMOTION_HEADER_PRIMARY, PromotionUsage.PROMOTION_USAGE, "promotion_usage_promotion_header_id_fk", PromotionUsage.PROMOTION_USAGE.PROMOTION_ID);
        public static final ForeignKey<PromotionUsageRecord, AccountRecord> PROMOTION_USAGE_ACCOUNT_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_ACCOUNT_PRIMARY, PromotionUsage.PROMOTION_USAGE, "promotion_usage_account_id_fk", PromotionUsage.PROMOTION_USAGE.ACCOUNT_ID);
        public static final ForeignKey<RecipeCategoryRelationRecord, RecipeRecord> RECIPE_CATEGORY_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_RECIPE_PRIMARY, RecipeCategoryRelation.RECIPE_CATEGORY_RELATION, "recipe_category_ibfk_1", RecipeCategoryRelation.RECIPE_CATEGORY_RELATION.RECIPE_ID);
        public static final ForeignKey<RecipeCategoryRelationRecord, RecipeCategoryRecord> RECIPE_CATEGORY_IBFK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_RECIPE_CATEGORY_PRIMARY, RecipeCategoryRelation.RECIPE_CATEGORY_RELATION, "recipe_category_ibfk_2", RecipeCategoryRelation.RECIPE_CATEGORY_RELATION.CATEGORY_ID);
        public static final ForeignKey<RecipeIngredientRecord, RecipeIngredientGroupRecord> RECIPE_INGREDIENT_IBFK_2 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_RECIPE_INGREDIENT_GROUP_PRIMARY, RecipeIngredient.RECIPE_INGREDIENT, "recipe_ingredient_ibfk_2", RecipeIngredient.RECIPE_INGREDIENT.RECIPE_INGREDIENT_GROUP_ID);
        public static final ForeignKey<RecipeIngredientRecord, UomRecord> RECIPE_INGREDIENT_IBFK_3 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_UOM_PRIMARY, RecipeIngredient.RECIPE_INGREDIENT, "recipe_ingredient_ibfk_3", RecipeIngredient.RECIPE_INGREDIENT.UOM);
        public static final ForeignKey<RecipeIngredientGroupRecord, RecipeRecord> RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_RECIPE_PRIMARY, RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP, "recipe_ingredient_group_recipe_id_fk", RecipeIngredientGroup.RECIPE_INGREDIENT_GROUP.RECIPE_ID);
        public static final ForeignKey<TagRecord, TagGroupRecord> TAG_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_TAG_GROUP_PRIMARY, Tag.TAG, "tag_ibfk_1", Tag.TAG.TAG_GROUP_ID);
        public static final ForeignKey<TagRelationRecord, TagRecord> TAG_RELATION_IBFK_1 = Internal.createForeignKey(com.scratch.database.mysql.jv.Keys.KEY_TAG_PRIMARY, TagRelation.TAG_RELATION, "tag_relation_ibfk_1", TagRelation.TAG_RELATION.TAG_ID);
    }
}
