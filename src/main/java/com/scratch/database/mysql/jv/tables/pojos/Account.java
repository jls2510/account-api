/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Account implements Serializable {

    private static final long serialVersionUID = 1845874486;

    private final ULong     id;
    private final String    username;
    private final String    email;
    private final String    password;
    private final String    firstName;
    private final String    lastName;
    private final String    stripeId;
    private final Byte      isActive;
    private final Byte      isVerified;
    private final String    verificationCode;
    private final Timestamp verificationExpire;
    private final Timestamp updatedTs;
    private final Timestamp createdTs;

    public Account(Account value) {
        this.id = value.id;
        this.username = value.username;
        this.email = value.email;
        this.password = value.password;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.stripeId = value.stripeId;
        this.isActive = value.isActive;
        this.isVerified = value.isVerified;
        this.verificationCode = value.verificationCode;
        this.verificationExpire = value.verificationExpire;
        this.updatedTs = value.updatedTs;
        this.createdTs = value.createdTs;
    }

    public Account(
        ULong     id,
        String    username,
        String    email,
        String    password,
        String    firstName,
        String    lastName,
        String    stripeId,
        Byte      isActive,
        Byte      isVerified,
        String    verificationCode,
        Timestamp verificationExpire,
        Timestamp updatedTs,
        Timestamp createdTs
    ) {
        this.id = id;
        this.username = username;
        this.email = email;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.stripeId = stripeId;
        this.isActive = isActive;
        this.isVerified = isVerified;
        this.verificationCode = verificationCode;
        this.verificationExpire = verificationExpire;
        this.updatedTs = updatedTs;
        this.createdTs = createdTs;
    }

    public ULong getId() {
        return this.id;
    }

    public String getUsername() {
        return this.username;
    }

    public String getEmail() {
        return this.email;
    }

    public String getPassword() {
        return this.password;
    }

    public String getFirstName() {
        return this.firstName;
    }

    public String getLastName() {
        return this.lastName;
    }

    public String getStripeId() {
        return this.stripeId;
    }

    public Byte getIsActive() {
        return this.isActive;
    }

    public Byte getIsVerified() {
        return this.isVerified;
    }

    public String getVerificationCode() {
        return this.verificationCode;
    }

    public Timestamp getVerificationExpire() {
        return this.verificationExpire;
    }

    public Timestamp getUpdatedTs() {
        return this.updatedTs;
    }

    public Timestamp getCreatedTs() {
        return this.createdTs;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Account (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(stripeId);
        sb.append(", ").append(isActive);
        sb.append(", ").append(isVerified);
        sb.append(", ").append(verificationCode);
        sb.append(", ").append(verificationExpire);
        sb.append(", ").append(updatedTs);
        sb.append(", ").append(createdTs);

        sb.append(")");
        return sb.toString();
    }
}
