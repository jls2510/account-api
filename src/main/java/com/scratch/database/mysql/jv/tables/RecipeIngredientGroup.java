/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables;


import com.scratch.database.mysql.jv.Indexes;
import com.scratch.database.mysql.jv.JvB2cDev;
import com.scratch.database.mysql.jv.Keys;
import com.scratch.database.mysql.jv.tables.records.RecipeIngredientGroupRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeIngredientGroup extends TableImpl<RecipeIngredientGroupRecord> {

    private static final long serialVersionUID = 1910752325;

    /**
     * The reference instance of <code>jv_b2c_dev.recipe_ingredient_group</code>
     */
    public static final RecipeIngredientGroup RECIPE_INGREDIENT_GROUP = new RecipeIngredientGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecipeIngredientGroupRecord> getRecordType() {
        return RecipeIngredientGroupRecord.class;
    }

    /**
     * The column <code>jv_b2c_dev.recipe_ingredient_group.id</code>.
     */
    public final TableField<RecipeIngredientGroupRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>jv_b2c_dev.recipe_ingredient_group.recipe_id</code>.
     */
    public final TableField<RecipeIngredientGroupRecord, ULong> RECIPE_ID = createField("recipe_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.recipe_ingredient_group.name</code>.
     */
    public final TableField<RecipeIngredientGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>jv_b2c_dev.recipe_ingredient_group.updated_ts</code>.
     */
    public final TableField<RecipeIngredientGroupRecord, Timestamp> UPDATED_TS = createField("updated_ts", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jv_b2c_dev.recipe_ingredient_group.created_ts</code>.
     */
    public final TableField<RecipeIngredientGroupRecord, Timestamp> CREATED_TS = createField("created_ts", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>jv_b2c_dev.recipe_ingredient_group</code> table reference
     */
    public RecipeIngredientGroup() {
        this(DSL.name("recipe_ingredient_group"), null);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.recipe_ingredient_group</code> table reference
     */
    public RecipeIngredientGroup(String alias) {
        this(DSL.name(alias), RECIPE_INGREDIENT_GROUP);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.recipe_ingredient_group</code> table reference
     */
    public RecipeIngredientGroup(Name alias) {
        this(alias, RECIPE_INGREDIENT_GROUP);
    }

    private RecipeIngredientGroup(Name alias, Table<RecipeIngredientGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecipeIngredientGroup(Name alias, Table<RecipeIngredientGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RecipeIngredientGroup(Table<O> child, ForeignKey<O, RecipeIngredientGroupRecord> key) {
        super(child, key, RECIPE_INGREDIENT_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JvB2cDev.JV_B2C_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECIPE_INGREDIENT_GROUP_PRIMARY, Indexes.RECIPE_INGREDIENT_GROUP_RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RecipeIngredientGroupRecord, ULong> getIdentity() {
        return Keys.IDENTITY_RECIPE_INGREDIENT_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RecipeIngredientGroupRecord> getPrimaryKey() {
        return Keys.KEY_RECIPE_INGREDIENT_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RecipeIngredientGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<RecipeIngredientGroupRecord>>asList(Keys.KEY_RECIPE_INGREDIENT_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RecipeIngredientGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RecipeIngredientGroupRecord, ?>>asList(Keys.RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK);
    }

    public Recipe recipe() {
        return new Recipe(this, Keys.RECIPE_INGREDIENT_GROUP_RECIPE_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeIngredientGroup as(String alias) {
        return new RecipeIngredientGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeIngredientGroup as(Name alias) {
        return new RecipeIngredientGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecipeIngredientGroup rename(String name) {
        return new RecipeIngredientGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecipeIngredientGroup rename(Name name) {
        return new RecipeIngredientGroup(name, null);
    }
}
