/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.daos;


import com.scratch.database.mysql.jv.tables.Recipe;
import com.scratch.database.mysql.jv.tables.records.RecipeRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeDao extends DAOImpl<RecipeRecord, com.scratch.database.mysql.jv.tables.pojos.Recipe, ULong> {

    /**
     * Create a new RecipeDao without any configuration
     */
    public RecipeDao() {
        super(Recipe.RECIPE, com.scratch.database.mysql.jv.tables.pojos.Recipe.class);
    }

    /**
     * Create a new RecipeDao with an attached configuration
     */
    public RecipeDao(Configuration configuration) {
        super(Recipe.RECIPE, com.scratch.database.mysql.jv.tables.pojos.Recipe.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(com.scratch.database.mysql.jv.tables.pojos.Recipe object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchById(ULong... values) {
        return fetch(Recipe.RECIPE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Recipe fetchOneById(ULong value) {
        return fetchOne(Recipe.RECIPE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByName(String... values) {
        return fetch(Recipe.RECIPE.NAME, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByUrl(String... values) {
        return fetch(Recipe.RECIPE.URL, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByDescription(String... values) {
        return fetch(Recipe.RECIPE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>sequence IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchBySequence(Integer... values) {
        return fetch(Recipe.RECIPE.SEQUENCE, values);
    }

    /**
     * Fetch records that have <code>servings IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByServings(String... values) {
        return fetch(Recipe.RECIPE.SERVINGS, values);
    }

    /**
     * Fetch records that have <code>prep_time IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByPrepTime(String... values) {
        return fetch(Recipe.RECIPE.PREP_TIME, values);
    }

    /**
     * Fetch records that have <code>instructions IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByInstructions(String... values) {
        return fetch(Recipe.RECIPE.INSTRUCTIONS, values);
    }

    /**
     * Fetch records that have <code>meta_title IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByMetaTitle(String... values) {
        return fetch(Recipe.RECIPE.META_TITLE, values);
    }

    /**
     * Fetch records that have <code>meta_description IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByMetaDescription(String... values) {
        return fetch(Recipe.RECIPE.META_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByIsDeleted(Byte... values) {
        return fetch(Recipe.RECIPE.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByCreatedTs(Timestamp... values) {
        return fetch(Recipe.RECIPE.CREATED_TS, values);
    }

    /**
     * Fetch records that have <code>updated_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Recipe> fetchByUpdatedTs(Timestamp... values) {
        return fetch(Recipe.RECIPE.UPDATED_TS, values);
    }
}
