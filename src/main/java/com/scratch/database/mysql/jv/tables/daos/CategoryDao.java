/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.daos;


import com.scratch.database.mysql.jv.tables.Category;
import com.scratch.database.mysql.jv.tables.records.CategoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryDao extends DAOImpl<CategoryRecord, com.scratch.database.mysql.jv.tables.pojos.Category, ULong> {

    /**
     * Create a new CategoryDao without any configuration
     */
    public CategoryDao() {
        super(Category.CATEGORY, com.scratch.database.mysql.jv.tables.pojos.Category.class);
    }

    /**
     * Create a new CategoryDao with an attached configuration
     */
    public CategoryDao(Configuration configuration) {
        super(Category.CATEGORY, com.scratch.database.mysql.jv.tables.pojos.Category.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(com.scratch.database.mysql.jv.tables.pojos.Category object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchById(ULong... values) {
        return fetch(Category.CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Category fetchOneById(ULong value) {
        return fetchOne(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByUrl(String... values) {
        return fetch(Category.CATEGORY.URL, values);
    }

    /**
     * Fetch a unique record that has <code>url = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Category fetchOneByUrl(String value) {
        return fetchOne(Category.CATEGORY.URL, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByName(String... values) {
        return fetch(Category.CATEGORY.NAME, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByDescription(String... values) {
        return fetch(Category.CATEGORY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>meta_title IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByMetaTitle(String... values) {
        return fetch(Category.CATEGORY.META_TITLE, values);
    }

    /**
     * Fetch records that have <code>meta_description IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByMetaDescription(String... values) {
        return fetch(Category.CATEGORY.META_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>sequence IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchBySequence(Integer... values) {
        return fetch(Category.CATEGORY.SEQUENCE, values);
    }

    /**
     * Fetch records that have <code>is_primary IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByIsPrimary(Byte... values) {
        return fetch(Category.CATEGORY.IS_PRIMARY, values);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByIsActive(Byte... values) {
        return fetch(Category.CATEGORY.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByIsDeleted(Byte... values) {
        return fetch(Category.CATEGORY.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>updated_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByUpdatedTs(Timestamp... values) {
        return fetch(Category.CATEGORY.UPDATED_TS, values);
    }

    /**
     * Fetch records that have <code>created_ts IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Category> fetchByCreatedTs(Timestamp... values) {
        return fetch(Category.CATEGORY.CREATED_TS, values);
    }
}
