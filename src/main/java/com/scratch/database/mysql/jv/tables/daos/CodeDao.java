/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables.daos;


import com.scratch.database.mysql.jv.tables.Code;
import com.scratch.database.mysql.jv.tables.records.CodeRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeDao extends DAOImpl<CodeRecord, com.scratch.database.mysql.jv.tables.pojos.Code, Long> {

    /**
     * Create a new CodeDao without any configuration
     */
    public CodeDao() {
        super(Code.CODE, com.scratch.database.mysql.jv.tables.pojos.Code.class);
    }

    /**
     * Create a new CodeDao with an attached configuration
     */
    public CodeDao(Configuration configuration) {
        super(Code.CODE, com.scratch.database.mysql.jv.tables.pojos.Code.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.scratch.database.mysql.jv.tables.pojos.Code object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Code> fetchById(Long... values) {
        return fetch(Code.CODE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scratch.database.mysql.jv.tables.pojos.Code fetchOneById(Long value) {
        return fetchOne(Code.CODE.ID, value);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Code> fetchByType(String... values) {
        return fetch(Code.CODE.TYPE, values);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Code> fetchByKey(String... values) {
        return fetch(Code.CODE.KEY, values);
    }

    /**
     * Fetch records that have <code>val IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Code> fetchByVal(String... values) {
        return fetch(Code.CODE.VAL, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.scratch.database.mysql.jv.tables.pojos.Code> fetchByDescription(String... values) {
        return fetch(Code.CODE.DESCRIPTION, values);
    }
}
