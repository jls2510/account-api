/*
 * This file is generated by jOOQ.
 */
package com.scratch.database.mysql.jv.tables;


import com.scratch.database.mysql.jv.Indexes;
import com.scratch.database.mysql.jv.JvB2cDev;
import com.scratch.database.mysql.jv.Keys;
import com.scratch.database.mysql.jv.tables.records.PromotionUsageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromotionUsage extends TableImpl<PromotionUsageRecord> {

    private static final long serialVersionUID = -365812803;

    /**
     * The reference instance of <code>jv_b2c_dev.promotion_usage</code>
     */
    public static final PromotionUsage PROMOTION_USAGE = new PromotionUsage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromotionUsageRecord> getRecordType() {
        return PromotionUsageRecord.class;
    }

    /**
     * The column <code>jv_b2c_dev.promotion_usage.id</code>.
     */
    public final TableField<PromotionUsageRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_usage.promotion_id</code>.
     */
    public final TableField<PromotionUsageRecord, ULong> PROMOTION_ID = createField("promotion_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_usage.account_id</code>.
     */
    public final TableField<PromotionUsageRecord, ULong> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_usage.count</code>.
     */
    public final TableField<PromotionUsageRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>jv_b2c_dev.promotion_usage.created_ts</code>.
     */
    public final TableField<PromotionUsageRecord, Timestamp> CREATED_TS = createField("created_ts", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>jv_b2c_dev.promotion_usage</code> table reference
     */
    public PromotionUsage() {
        this(DSL.name("promotion_usage"), null);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.promotion_usage</code> table reference
     */
    public PromotionUsage(String alias) {
        this(DSL.name(alias), PROMOTION_USAGE);
    }

    /**
     * Create an aliased <code>jv_b2c_dev.promotion_usage</code> table reference
     */
    public PromotionUsage(Name alias) {
        this(alias, PROMOTION_USAGE);
    }

    private PromotionUsage(Name alias, Table<PromotionUsageRecord> aliased) {
        this(alias, aliased, null);
    }

    private PromotionUsage(Name alias, Table<PromotionUsageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PromotionUsage(Table<O> child, ForeignKey<O, PromotionUsageRecord> key) {
        super(child, key, PROMOTION_USAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JvB2cDev.JV_B2C_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROMOTION_USAGE_PRIMARY, Indexes.PROMOTION_USAGE_PROMOTION_USAGE_ACCOUNT_ID_FK, Indexes.PROMOTION_USAGE_PROMOTION_USAGE_ID_UINDEX, Indexes.PROMOTION_USAGE_PROMOTION_USAGE_PROMOTION_HEADER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PromotionUsageRecord, ULong> getIdentity() {
        return Keys.IDENTITY_PROMOTION_USAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PromotionUsageRecord> getPrimaryKey() {
        return Keys.KEY_PROMOTION_USAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PromotionUsageRecord>> getKeys() {
        return Arrays.<UniqueKey<PromotionUsageRecord>>asList(Keys.KEY_PROMOTION_USAGE_PRIMARY, Keys.KEY_PROMOTION_USAGE_PROMOTION_USAGE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PromotionUsageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PromotionUsageRecord, ?>>asList(Keys.PROMOTION_USAGE_PROMOTION_HEADER_ID_FK, Keys.PROMOTION_USAGE_ACCOUNT_ID_FK);
    }

    public PromotionHeader promotionHeader() {
        return new PromotionHeader(this, Keys.PROMOTION_USAGE_PROMOTION_HEADER_ID_FK);
    }

    public Account account() {
        return new Account(this, Keys.PROMOTION_USAGE_ACCOUNT_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromotionUsage as(String alias) {
        return new PromotionUsage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromotionUsage as(Name alias) {
        return new PromotionUsage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionUsage rename(String name) {
        return new PromotionUsage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PromotionUsage rename(Name name) {
        return new PromotionUsage(name, null);
    }
}
